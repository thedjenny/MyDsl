/*
 * generated by Xtext 2.29.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "ExportModel";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleExportModel
entryRuleExportModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExportModelRule()); }
	iv_ruleExportModel=ruleExportModel
	{ $current=$iv_ruleExportModel.current; }
	EOF;

// Rule ExportModel
ruleExportModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<?xml version = "1.0" encoding = "UTF-16"?>'
		{
			newLeafNode(otherlv_0, grammarAccess.getExportModelAccess().getXmlVersion10EncodingUTF16Keyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExportModelAccess().getExportNetlistTypeParserRuleCall_1_0());
				}
				lv_export_1_0=ruleNetlistType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExportModelRule());
					}
					set(
						$current,
						"export",
						lv_export_1_0,
						"org.xtext.example.mydsl.MyDsl.NetlistType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNetlistType
entryRuleNetlistType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNetlistTypeRule()); }
	iv_ruleNetlistType=ruleNetlistType
	{ $current=$iv_ruleNetlistType.current; }
	EOF;

// Rule NetlistType
ruleNetlistType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='<netlist xmlns="urn:netlist-schema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:netlist-schema ValidationRules.xsd" >\r\n\t<!--Famic Technologies Inc.-->\r\n\t<!--Automation Studio-->\r\n\t<!--Export-->'
			{
				newLeafNode(otherlv_0, grammarAccess.getNetlistTypeAccess().getNetlistXmlnsUrnNetlistSchemaXmlnsXsiHttpWwwW3Org2001XMLSchemaInstanceXsiSchemaLocationUrnNetlistSchemaValidationRulesXsdFamicTechnologiesIncAutomationStudioExportKeyword_0());
			}
		)?
		otherlv_1='<documents>'
		{
			newLeafNode(otherlv_1, grammarAccess.getNetlistTypeAccess().getDocumentsKeyword_1());
		}
		otherlv_2='<document Name='
		{
			newLeafNode(otherlv_2, grammarAccess.getNetlistTypeAccess().getDocumentNameKeyword_2());
		}
		(
			(
				lv_docname_3_0=RULE_STRING
				{
					newLeafNode(lv_docname_3_0, grammarAccess.getNetlistTypeAccess().getDocnameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNetlistTypeRule());
					}
					setWithLastConsumed(
						$current,
						"docname",
						lv_docname_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_4=' DiagramType='
			{
				newLeafNode(otherlv_4, grammarAccess.getNetlistTypeAccess().getDiagramTypeKeyword_4_0());
			}
			(
				(
					lv_doctype_5_0=RULE_STRING
					{
						newLeafNode(lv_doctype_5_0, grammarAccess.getNetlistTypeAccess().getDoctypeSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNetlistTypeRule());
						}
						setWithLastConsumed(
							$current,
							"doctype",
							lv_doctype_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_6='>'
		{
			newLeafNode(otherlv_6, grammarAccess.getNetlistTypeAccess().getGreaterThanSignKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNetlistTypeAccess().getLayerLayerParserRuleCall_6_0());
				}
				lv_layer_7_0=ruleLayer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNetlistTypeRule());
					}
					add(
						$current,
						"layer",
						lv_layer_7_0,
						"org.xtext.example.mydsl.MyDsl.Layer");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_8='</document>'
		{
			newLeafNode(otherlv_8, grammarAccess.getNetlistTypeAccess().getDocumentKeyword_7());
		}
		otherlv_9='</documents>'
		{
			newLeafNode(otherlv_9, grammarAccess.getNetlistTypeAccess().getDocumentsKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNetlistTypeAccess().getNodesNodesParserRuleCall_9_0());
				}
				lv_nodes_10_0=ruleNodes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNetlistTypeRule());
					}
					set(
						$current,
						"nodes",
						lv_nodes_10_0,
						"org.xtext.example.mydsl.MyDsl.Nodes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11='</netlist>'
		{
			newLeafNode(otherlv_11, grammarAccess.getNetlistTypeAccess().getNetlistKeyword_10());
		}
	)
;

// Entry rule entryRuleLayer
entryRuleLayer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLayerRule()); }
	iv_ruleLayer=ruleLayer
	{ $current=$iv_ruleLayer.current; }
	EOF;

// Rule Layer
ruleLayer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<layer Name='
		{
			newLeafNode(otherlv_0, grammarAccess.getLayerAccess().getLayerNameKeyword_0());
		}
		(
			(
				lv_coucheName_1_0=RULE_STRING
				{
					newLeafNode(lv_coucheName_1_0, grammarAccess.getLayerAccess().getCoucheNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLayerRule());
					}
					setWithLastConsumed(
						$current,
						"coucheName",
						lv_coucheName_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_2=' Visible="true" Simulated="true" Locked="false"'
			{
				newLeafNode(otherlv_2, grammarAccess.getLayerAccess().getVisibleTrueSimulatedTrueLockedFalseKeyword_2());
			}
		)?
		otherlv_3='>'
		{
			newLeafNode(otherlv_3, grammarAccess.getLayerAccess().getGreaterThanSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLayerAccess().getComponentsComponentParserRuleCall_4_0());
				}
				lv_components_4_0=ruleComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLayerRule());
					}
					add(
						$current,
						"components",
						lv_components_4_0,
						"org.xtext.example.mydsl.MyDsl.Component");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='</layer>'
		{
			newLeafNode(otherlv_5, grammarAccess.getLayerAccess().getLayerKeyword_5());
		}
	)
;

// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	iv_ruleComponent=ruleComponent
	{ $current=$iv_ruleComponent.current; }
	EOF;

// Rule Component
ruleComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<component ComponentID='
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentAccess().getComponentComponentIDKeyword_0());
		}
		(
			(
				lv_compoId_1_0=RULE_STRING
				{
					newLeafNode(lv_compoId_1_0, grammarAccess.getComponentAccess().getCompoIdSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"compoId",
						lv_compoId_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2=' IDA='
		{
			newLeafNode(otherlv_2, grammarAccess.getComponentAccess().getIDAKeyword_2());
		}
		(
			(
				lv_compoIda_3_0=RULE_STRING
				{
					newLeafNode(lv_compoIda_3_0, grammarAccess.getComponentAccess().getCompoIdaSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"compoIda",
						lv_compoIda_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4=' IDF='
		{
			newLeafNode(otherlv_4, grammarAccess.getComponentAccess().getIDFKeyword_4());
		}
		(
			(
				lv_compoIdf_5_0=RULE_STRING
				{
					newLeafNode(lv_compoIdf_5_0, grammarAccess.getComponentAccess().getCompoIdfSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"compoIdf",
						lv_compoIdf_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6=' IDT='
		{
			newLeafNode(otherlv_6, grammarAccess.getComponentAccess().getIDTKeyword_6());
		}
		(
			(
				lv_compoIdt_7_0=RULE_STRING
				{
					newLeafNode(lv_compoIdt_7_0, grammarAccess.getComponentAccess().getCompoIdtSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"compoIdt",
						lv_compoIdt_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_8='>'
		{
			newLeafNode(otherlv_8, grammarAccess.getComponentAccess().getGreaterThanSignKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentAccess().getVarsVariableParserRuleCall_9_0());
				}
				lv_vars_9_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentRule());
					}
					add(
						$current,
						"vars",
						lv_vars_9_0,
						"org.xtext.example.mydsl.MyDsl.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='</component>'
		{
			newLeafNode(otherlv_10, grammarAccess.getComponentAccess().getComponentKeyword_10());
		}
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<variable_type Name='
		{
			newLeafNode(otherlv_0, grammarAccess.getVariableAccess().getVariable_typeNameKeyword_0());
		}
		(
			(
				lv_varName_1_0=RULE_STRING
				{
					newLeafNode(lv_varName_1_0, grammarAccess.getVariableAccess().getVarNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableRule());
					}
					setWithLastConsumed(
						$current,
						"varName",
						lv_varName_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='>'
		{
			newLeafNode(otherlv_2, grammarAccess.getVariableAccess().getGreaterThanSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableAccess().getTagsTagParserRuleCall_3_0());
				}
				lv_tags_3_0=ruleTag
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableRule());
					}
					add(
						$current,
						"tags",
						lv_tags_3_0,
						"org.xtext.example.mydsl.MyDsl.Tag");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='</variable_type>'
		{
			newLeafNode(otherlv_4, grammarAccess.getVariableAccess().getVariable_typeKeyword_4());
		}
	)
;

// Entry rule entryRuleTag
entryRuleTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTagRule()); }
	iv_ruleTag=ruleTag
	{ $current=$iv_ruleTag.current; }
	EOF;

// Rule Tag
ruleTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<t'
		{
			newLeafNode(otherlv_0, grammarAccess.getTagAccess().getTKeyword_0());
		}
		(
			(
				lv_tagNum_1_0=RULE_INT
				{
					newLeafNode(lv_tagNum_1_0, grammarAccess.getTagAccess().getTagNumINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTagRule());
					}
					setWithLastConsumed(
						$current,
						"tagNum",
						lv_tagNum_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2=' Name='
		{
			newLeafNode(otherlv_2, grammarAccess.getTagAccess().getNameKeyword_2());
		}
		(
			(
				lv_tagName_3_0=RULE_STRING
				{
					newLeafNode(lv_tagName_3_0, grammarAccess.getTagAccess().getTagNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTagRule());
					}
					setWithLastConsumed(
						$current,
						"tagName",
						lv_tagName_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4='>'
		{
			newLeafNode(otherlv_4, grammarAccess.getTagAccess().getGreaterThanSignKeyword_4());
		}
		(
			(
				(
					lv_var_5_0=RULE_ID
					{
						newLeafNode(lv_var_5_0, grammarAccess.getTagAccess().getVarIDTerminalRuleCall_5_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTagRule());
						}
						setWithLastConsumed(
							$current,
							"var",
							lv_var_5_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			    |
			this_STRING_6=RULE_STRING
			{
				newLeafNode(this_STRING_6, grammarAccess.getTagAccess().getSTRINGTerminalRuleCall_5_1());
			}
			    |
			this_INT_7=RULE_INT
			{
				newLeafNode(this_INT_7, grammarAccess.getTagAccess().getINTTerminalRuleCall_5_2());
			}
		)?
		otherlv_8='</t'
		{
			newLeafNode(otherlv_8, grammarAccess.getTagAccess().getTKeyword_6());
		}
		(
			(
				lv_tagNum_9_0=RULE_INT
				{
					newLeafNode(lv_tagNum_9_0, grammarAccess.getTagAccess().getTagNumINTTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTagRule());
					}
					setWithLastConsumed(
						$current,
						"tagNum",
						lv_tagNum_9_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_10='>'
		{
			newLeafNode(otherlv_10, grammarAccess.getTagAccess().getGreaterThanSignKeyword_8());
		}
	)
;

// Entry rule entryRuleNodes
entryRuleNodes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodesRule()); }
	iv_ruleNodes=ruleNodes
	{ $current=$iv_ruleNodes.current; }
	EOF;

// Rule Nodes
ruleNodes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<nodes>'
		{
			newLeafNode(otherlv_0, grammarAccess.getNodesAccess().getNodesKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNodesAccess().getNodesNodeParserRuleCall_1_0());
				}
				lv_nodes_1_0=ruleNode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodesRule());
					}
					add(
						$current,
						"nodes",
						lv_nodes_1_0,
						"org.xtext.example.mydsl.MyDsl.Node");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_2='</nodes>'
		{
			newLeafNode(otherlv_2, grammarAccess.getNodesAccess().getNodesKeyword_2());
		}
	)
;

// Entry rule entryRuleNode
entryRuleNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeRule()); }
	iv_ruleNode=ruleNode
	{ $current=$iv_ruleNode.current; }
	EOF;

// Rule Node
ruleNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<node Name='
		{
			newLeafNode(otherlv_0, grammarAccess.getNodeAccess().getNodeNameKeyword_0());
		}
		(
			(
				lv_nodeName_1_0=RULE_STRING
				{
					newLeafNode(lv_nodeName_1_0, grammarAccess.getNodeAccess().getNodeNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeRule());
					}
					setWithLastConsumed(
						$current,
						"nodeName",
						lv_nodeName_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2=' Technology="Bloc">'
		{
			newLeafNode(otherlv_2, grammarAccess.getNodeAccess().getTechnologyBlocKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNodeAccess().getLinksLinkParserRuleCall_3_0());
				}
				lv_links_3_0=ruleLink
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodeRule());
					}
					add(
						$current,
						"links",
						lv_links_3_0,
						"org.xtext.example.mydsl.MyDsl.Link");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='</node>'
		{
			newLeafNode(otherlv_4, grammarAccess.getNodeAccess().getNodeKeyword_4());
		}
	)
;

// Entry rule entryRuleLink
entryRuleLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkRule()); }
	iv_ruleLink=ruleLink
	{ $current=$iv_ruleLink.current; }
	EOF;

// Rule Link
ruleLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<link CompID='
		{
			newLeafNode(otherlv_0, grammarAccess.getLinkAccess().getLinkCompIDKeyword_0());
		}
		(
			(
				lv_CompID_1_0=RULE_STRING
				{
					newLeafNode(lv_CompID_1_0, grammarAccess.getLinkAccess().getCompIDSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLinkRule());
					}
					setWithLastConsumed(
						$current,
						"CompID",
						lv_CompID_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2=' PortID='
		{
			newLeafNode(otherlv_2, grammarAccess.getLinkAccess().getPortIDKeyword_2());
		}
		(
			(
				lv_portID_3_0=RULE_STRING
				{
					newLeafNode(lv_portID_3_0, grammarAccess.getLinkAccess().getPortIDSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLinkRule());
					}
					setWithLastConsumed(
						$current,
						"portID",
						lv_portID_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4=' PortName='
		{
			newLeafNode(otherlv_4, grammarAccess.getLinkAccess().getPortNameKeyword_4());
		}
		(
			(
				lv_portName_5_0=RULE_STRING
				{
					newLeafNode(lv_portName_5_0, grammarAccess.getLinkAccess().getPortNameSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLinkRule());
					}
					setWithLastConsumed(
						$current,
						"portName",
						lv_portName_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6=' PortDirection='
		{
			newLeafNode(otherlv_6, grammarAccess.getLinkAccess().getPortDirectionKeyword_6());
		}
		(
			(
				lv_portName2_7_0=RULE_STRING
				{
					newLeafNode(lv_portName2_7_0, grammarAccess.getLinkAccess().getPortName2STRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLinkRule());
					}
					setWithLastConsumed(
						$current,
						"portName2",
						lv_portName2_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLinkAccess().getBaliseFermanteBaliseParserRuleCall_8_0());
				}
				lv_baliseFermante_8_0=ruleBalise
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinkRule());
					}
					set(
						$current,
						"baliseFermante",
						lv_baliseFermante_8_0,
						"org.xtext.example.mydsl.MyDsl.Balise");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBalise
entryRuleBalise returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBaliseRule()); }
	iv_ruleBalise=ruleBalise
	{ $current=$iv_ruleBalise.current.getText(); }
	EOF;

// Rule Balise
ruleBalise returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='/>'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getBaliseAccess().getSolidusGreaterThanSignKeyword());
	}
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
